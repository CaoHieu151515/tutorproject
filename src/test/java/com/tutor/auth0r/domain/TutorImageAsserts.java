package com.tutor.auth0r.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TutorImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorImageAllPropertiesEquals(TutorImage expected, TutorImage actual) {
        assertTutorImageAutoGeneratedPropertiesEquals(expected, actual);
        assertTutorImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorImageAllUpdatablePropertiesEquals(TutorImage expected, TutorImage actual) {
        assertTutorImageUpdatableFieldsEquals(expected, actual);
        assertTutorImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorImageAutoGeneratedPropertiesEquals(TutorImage expected, TutorImage actual) {
        assertThat(expected)
            .as("Verify TutorImage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorImageUpdatableFieldsEquals(TutorImage expected, TutorImage actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorImageUpdatableRelationshipsEquals(TutorImage expected, TutorImage actual) {
        assertThat(expected)
            .as("Verify TutorImage relationships")
            .satisfies(e -> assertThat(e.getMedia()).as("check media").isEqualTo(actual.getMedia()))
            .satisfies(e -> assertThat(e.getTutorDetails()).as("check tutorDetails").isEqualTo(actual.getTutorDetails()));
    }
}
