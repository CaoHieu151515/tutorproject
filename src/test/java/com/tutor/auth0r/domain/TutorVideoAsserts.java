package com.tutor.auth0r.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TutorVideoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorVideoAllPropertiesEquals(TutorVideo expected, TutorVideo actual) {
        assertTutorVideoAutoGeneratedPropertiesEquals(expected, actual);
        assertTutorVideoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorVideoAllUpdatablePropertiesEquals(TutorVideo expected, TutorVideo actual) {
        assertTutorVideoUpdatableFieldsEquals(expected, actual);
        assertTutorVideoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorVideoAutoGeneratedPropertiesEquals(TutorVideo expected, TutorVideo actual) {
        assertThat(expected)
            .as("Verify TutorVideo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorVideoUpdatableFieldsEquals(TutorVideo expected, TutorVideo actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTutorVideoUpdatableRelationshipsEquals(TutorVideo expected, TutorVideo actual) {
        assertThat(expected)
            .as("Verify TutorVideo relationships")
            .satisfies(e -> assertThat(e.getMedia()).as("check media").isEqualTo(actual.getMedia()));
    }
}
