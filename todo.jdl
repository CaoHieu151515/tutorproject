enum Teach {
    MATH_10,
    MATH_11,
    MATH_12,
    PHYSIC_10,
    PHYSIC_11,
    PHYSIC_12,
    CHEMISTRY_10,
    CHEMISTRY_11,
    CHEMISTRY_12,
    ENGLISH_10,
    ENGLISH_11,
    ENGLISH_12
}


enum GenderType{
	MALE,
    FEMALE,
    OTHER

}
enum Devide {
    MICRO,
    CAMERA
}

enum TuStatus {
    READY,
    BUSY,
    OFFLINE
}

enum WalletTransactionType {
    DEPOSIT,
    WITHDRAWAL,
    HIRE,
    SERVICE_FEE_EARN,
    REFUND
}

enum WalletTransactionStatus {
    SUCCEED,
    FAILED,
    VERIFING
}

enum Contact {
    MEET,
    DISCORD,
    ZOOM
}

enum Rank {
    BACHELOR,
    MASTER,
    SECOND
}

enum HireStatus {
    DURING,
    DONE,
    CANCEL
}

entity Wallet {
    amount Double
}

entity HiringHours{
	hour Integer,
}
entity WalletTransaction {
    amount Double,
    type WalletTransactionType,
    status WalletTransactionStatus,
    createAt LocalDate
}

entity Media {
    url String
}

entity UserVerify {
    rating Long,
    school String,
    studentID String,
    major String,
    graduationYear Long
}

entity Tutor {
    recommend Boolean,
    price Double,
    tuDevice Devide,
    status TuStatus,
    followerCount Long,
    averageRating BigDecimal
}
entity Rating {
    rating Integer required min(1) max(5),
    comment String maxlength(500),
    hours Integer,
    date LocalDate required
}


entity TutorDetails {
    contact Contact,
    information String
}

entity TutorVideo {}

entity TutorImage {}

entity TutorTeach {
    subject Teach
}

entity AcademicRank {
    type Rank
}

entity IdentityCard {}

entity HireTutor {
    timeHire Integer,
    totalPrice Double,
    status HireStatus
}

entity AppUser {
    beTutor Boolean,
    gender GenderType,
    bankAccountNumber String,
    bankName String,
    walletAddress String
}

entity Follow {
    createDate LocalDate
}

relationship OneToMany {
    Wallet{transactions} to WalletTransaction,
    UserVerify{academicRank} to AcademicRank,
    IdentityCard{media} to Media,
    TutorDetails{tutorTeach} to TutorTeach,
    TutorDetails{tutorImage} to TutorImage,
    AppUser{hireTutor} to HireTutor,
    Tutor{hireTutor} to HireTutor
    Tutor{hiringHours} to HiringHours
}

relationship ManyToOne {
    Follow{followerAppUser} to AppUser
    Follow{followedTutor} to Tutor
    Rating to Tutor
}

relationship OneToOne {
    Wallet to AppUser with builtInEntity,
    AcademicRank{media} to Media,
    UserVerify{identityCard} to IdentityCard,
    AppUser{tutor} to Tutor,
    Tutor{tutorDetails} to TutorDetails,
    AppUser{userVerify} to UserVerify,
    TutorDetails{tutorVideo} to TutorVideo,
    TutorVideo{media} to Media,
    TutorImage{media} to Media,
    AppUser{user} to User{appUser} with builtInEntity,
    AppUser to Rating
}

// Sử dụng Data Transfer Objects (DTO)
dto * with mapstruct

// Cấu hình dịch vụ
service all with serviceImpl

// Cấu hình hậu tố cho React
angularSuffix * with mySuffix

