enum Teach {
    MATH_10,
    MATH_11,
    MATH_12,
    PHYSIC_10,
    PHYSIC_11,
    PHYSIC_12,
    CHEMISTRY_10,
    CHEMISTRY_11,
    CHEMISTRY_12,
    ENGLISH_10,
    ENGLISH_11,
    ENGLISH_12
}

enum Devide {
    MiCRO,
    CAMERA
}

enum TuStatus {
    READY,
    BUSY,
    OFFLINE
}

enum WalletTransactionType {
    DEPOSIT,
    WITHDRAWAL,
    HIRE,
    SERVICE_FEE_EARN,
    REFUND
}

enum WalletTransactionStatus {
    SUCCEED,
    FAILED,
    VERIFING
}

enum Contact {
    MEET,
    DISCORD,
    ZOOM
}

enum Rank {
    BACHELOR,
    MASTER,
    SECOND
}

enum HireStatus {
    DURING,
    DONE,
    CANCEL
}

entity Wallet {
    amount Double
}

entity WalletTransaction {
    amount Double,
    type WalletTransactionType,
    status WalletTransactionStatus,
    createAt LocalDate
}

entity Media {
    url String
}

entity UserVerify {
    rating Long,
    school String,
    studentID String,
    major String,
    graduationYear Long
}

entity Tutor {
    recommend Boolean,
    price Double,
    tuDevice Devide,
    status TuStatus
}

entity TutorDetails {
    contact Contact,
    information String
}

entity TutorVideo {}

entity TutorImage {}

entity TutorTeach {
    subject Teach
}

entity AcademicRank {
    type Rank
}

entity IdentityCard {}

entity HireTutor {
    timeHire Integer,
    totalPrice Double,
    status HireStatus
}

entity AppUser {
    beTutor Boolean
}

entity Follow {}

relationship OneToMany {
    Wallet{transactions} to WalletTransaction,
    UserVerify{academicRank} to AcademicRank,
    IdentityCard{media} to Media,
    TutorDetails{tutorTeach} to TutorTeach,
    TutorDetails{tutorImage} to TutorImage,
    AppUser{hireTutor} to HireTutor,
    Tutor{hireTutor} to HireTutor,
    AppUser to Follow{appUser},
    AppUser to Follow{followerAppUser}
}

relationship OneToOne {
    Wallet to AppUser with builtInEntity,
    AcademicRank{media} to Media,
    UserVerify{identityCard} to IdentityCard,
    AppUser{tutor} to Tutor,
    Tutor{tutorDetails} to TutorDetails,
    AppUser{userVerify} to UserVerify,
    TutorDetails{tutorVideo} to TutorVideo,
    TutorVideo{media} to Media,
    TutorImage{media} to Media,
     AppUser{user} to User{appUser} with builtInEntity
}

// Sử dụng Data Transfer Objects (DTO)
dto * with mapstruct

// Cấu hình dịch vụ
service all with serviceImpl

// Cấu hình hậu tố cho React
angularSuffix * with mySuffix

// Pagination for entity
paginate Request with infinite-scroll
